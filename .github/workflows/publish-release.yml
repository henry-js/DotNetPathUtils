name: Publish Stable Release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*'

permissions:
  contents: write

jobs:
  publish:
    name: Build & Publish Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Setup Taskfile
        uses: arduino/setup-task@v2

      - name: Create .env file with secrets
        env:
          # This safely maps the repository secret to an env var for this step
          NUGET_API_KEY_SECRET: ${{ secrets.NUGET_API_KEY }}
        run: |
          if [ -z "$NUGET_API_KEY_SECRET" ]; then
            echo "ERROR: The NUGET_API_KEY secret is not set in the repository settings."
            echo "Please go to Settings > Secrets and variables > Actions to add it."
            exit 1
          fi
          echo "Secret found. Creating .env file."
          cp public.env .env
          echo "NUGET_API_KEY=${NUGET_API_KEY_SECRET}" >> .env

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: "Stable release for version ${{ github.ref_name }}."

      - name: Run Tests
        run: task test

      - name: Execute Smart Release
        env:
          # The GITHUB_TOKEN is needed for the `gh` command inside the release task
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Call the single, top-level release task and pass in the
          # CI-specific variables it needs.
          task release GITHUB_REF_NAME=${{ github.ref_name }}