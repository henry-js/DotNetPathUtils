name: Publish Stable Release

on:
  push:
    tags:
      # Trigger on tags like 1.0.0, 1.2.3, 1.2.3-rc1 etc.
      # Does NOT match 'v' prefix.
      - '[0-9]+.[0-9]+.[0-9]+*'

# Grant permissions for the GITHUB_TOKEN to create releases.
permissions:
  contents: write

jobs:
  publish:
    name: Build & Publish Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Setup Taskfile
        uses: arduino/setup-task@v2

      - name: Create .env file with secrets
        run: |
          cp public.env .env
          echo "NUGET_API_KEY=${{ secrets.NUGET_API_KEY }}" >> .env

      - name: Get stable version from tag
        id: version
        run: echo "version=$(task get-version)" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # github.ref_name is the tag that triggered the workflow (e.g., "1.0.0")
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: "Stable release for version ${{ steps.version.outputs.version }}."

      - name: Run Tests
        run: task test

      - name: Pack, Push, and Upload Artifacts
        env:
          # Pass the version and token into the shell environment for this step
          APP_VERSION: ${{ steps.version.outputs.version }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # --- Step 1: Load variables from file into the shell ---
          echo "--- Loading environment variables from public.env ---"
          source public.env

          # --- Step 2: Echo variables for debugging ---
          echo "DEBUG: Value of PROJECT_TO_PACK is '$PROJECT_TO_PACK'"
          echo "DEBUG: Value of PROJECT_TO_PUBLISH is '$PROJECT_TO_PUBLISH'"
          echo "DEBUG: Value of APP_VERSION is '$APP_VERSION'"

          # --- Step 3: Conditional NuGet push ---
          if [[ -n "$PROJECT_TO_PACK" ]]; then
            echo "--- Project is a library. Pushing to NuGet... ---"
            task push:nuget
          else
            echo "--- Skipping NuGet push (PROJECT_TO_PACK is not set) ---"
          fi

          # --- Step 4: Conditional Velopack build and upload ---
          if [[ -n "$PROJECT_TO_PUBLISH" ]]; then
            echo "--- Project is an application. Packing Velopack release... ---"
            # We pass variables directly to the task command.
            # Using RID win-x64 as a placeholder for cross-compilation.
            task pack:velopack APP_VERSION=$APP_VERSION RID=win-x64

            echo "--- Uploading Velopack assets to GitHub Release... ---"
            gh release upload ${{ github.ref_name }} ./dist/releases/*
          else
            echo "--- Skipping Velopack steps (PROJECT_TO_PUBLISH is not set) ---"
          fi